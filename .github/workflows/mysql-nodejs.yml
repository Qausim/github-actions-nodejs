# name: Node MySQL CI

# on:
#   [push, pull_request]

# jobs:
#   build:
#     runs-on: ubuntu-18.04

#     strategy:
#       matrix:
#         node-version: ['10.x']

#     steps:
#     - uses: actions/checkout@v1
#     - name: Shutdown Ubuntu MySQL (SUDO)
#       run: sudo service mysql stop
#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v1
#       with:
#         node-version: ${{ matrix.node-version }}
#     - name: Set up MySQL 5.7
#       uses: mirromutth/mysql-action@master
#       with:
#         host port: 3306
#         container port: 3306
#         mysql version: 8.0.23
#         mysql user: test_user
#         mysql database: test_db
#         mysql password: ${{ secrets.DB_PASSWORD }}
#         mysql root password: ${{ secrets.DB_PASSWORD }}
#     - name: npm install, build, and test
#       run: |
#         npm install
#         export DB_DIALECT=mysql \
#           && export DB_HOST=localhost \
#           && export DB_USERNAME=test_user \
#           && export TEST_DB=test_db \
#           && export DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
#           && export DB_PORT=3306
#         echo $DB_PORT
#         echo $DB_PASSWORD
#         node -p "(({ DB_DIALECT, DB_HOST, DB_USERNAME, DB_PASSWORD, TEST_DB, DB_PORT }) => console.log({DB_DIALECT, DB_HOST, DB_USERNAME, DB_PASSWORD, TEST_DB, DB_PORT}))(process.env)"
#         npm install -g sequelize-cli
#         npm test
#       env:
#         CI: true

name: Node MySQL CI

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    services:
      mysql:
        image: mysql:8.0.23
        env:
          MYSQL_USER: test_user
          MYSQL_DATABASE: test_db
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: password
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
          - 3306:3600
        options:
          --name=mysql-check
          --health-retries=3
          --health-timeout=5s
          --health-interval=10s
          --health-cmd="mysqladmin ping"

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm install, build, and test
        run: |
          # cp ./config.json.example config.json
          npm install
          sudo service mysql start
          # mysql --host 127.0.0.1 --port 3306:3306 -u root -p password < etc/original.sql
          mysql --host 127.0.0.1 --port 3306:3306 -uroot -ppassword -e "SHOW DATABASES"
          mysql --host 127.0.0.1 --port 3306:3306 -uroot -ppassword -e "SELECT Host, User FROM mysql.user"
          export DB_DIALECT=mysql \
            && export DB_HOST=localhost \
            && export DB_USERNAME=test_user \
            && export DB_PASSWORD=password \
            && export TEST_DB=test_db \
            && export DB_PORT=${{ job.services.mysql.ports['3306'] }}
          echo $DB_PORT
          echo $DB_PASSWORD
          node -p "(({ DB_DIALECT, DB_HOST, DB_USERNAME, DB_PASSWORD, TEST_DB, DB_PORT }) => console.log({DB_DIALECT, DB_HOST, DB_USERNAME, DB_PASSWORD, TEST_DB, DB_PORT}))(process.env)"
          npm install -g sequelize-cli
          npm test
        env:
          CI: true
